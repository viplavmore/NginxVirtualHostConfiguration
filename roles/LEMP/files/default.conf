##
server {
        listen 80;
	server_name www.virtualhost.com virtualhost.com;
        return         301 https://$server_name$request_uri;
}

server {
#	listen 80;
        listen 443 ssl http2;	
	include /etc/nginx/mime.types;

	root  /opt/www/html/virtualhost/;
	index home.php;

	# Make site accessible from http://localhost/
	server_name www.virtualhost.com virtualhost.com;

	access_log /etc/nginx/logs/www.virtualhost.com-access.log common;
	error_log /etc/nginx/logs/www.virtualhost.com-error.log;

        access_log syslog:server=10.0.10.38:12001 graylog2_format;
        error_log syslog:server=10.0.10.38:12002;

        # Ssl cert and key
        ssl on;
        ssl_certificate         /etc/nginx/ssl_cinestaan_com/domain-certificate.crt;
        ssl_certificate_key     /etc/nginx/ssl_cinestaan_com/domain.key;


	location / {
		# First attempt to serve request as file, then
	}

	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass 127.0.0.1:9000;
		#fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		include fastcgi_params;
    		fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
		fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
		fastcgi_read_timeout    600;
                fastcgi_send_timeout    600;
                fastcgi_connect_timeout 600;
                fastcgi_buffer_size 128k;
                fastcgi_buffers 4 256k;
                fastcgi_param PHP_VALUE "upload_max_filesize = 20M \n post_max_size=64M \n memory_limit=100M";
	}

        location ~* \.(gif|png|jpeg|jpg|woff|ttf)$ {
                expires 1w;
                add_header Cache-Control public;
        }
        location ~* \.(js|css)$ {
                expires 1d;
                add_header Cache-Control public;
        }
	location ~ /\.ht {
		deny all;
		access_log off;
		log_not_found off;
	}

        if ($http_host ~* "^virtualhost.com$"){
           set $rule_0 1$rule_0;
        }
        if ($rule_0 = "1"){
           rewrite ^/(.*)$ http://www.virtualhost.com/$1 permanent;
        }
        ## Block http user agent - wget ##
        if ($http_user_agent ~* (Wget) ) {
           return 403;
        }
	error_page 404 /404.php;
}
